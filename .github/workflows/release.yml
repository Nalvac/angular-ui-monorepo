name: Release

# 1️⃣ On autorise l’écriture dans le repo pour le GITHUB_TOKEN
permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'          # déclenchement sur tout tag vX.Y.Z

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # 2️⃣ On récupère tout le repo (historique complet)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      # 3️⃣ Setup Node.js & deps
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # 4️⃣ Build ta librairie
      - name: Build UI components
        run: npx nx build ui-components --configuration=production

      # 5️⃣ Préparer la branche release
      - name: Create or reset release branch
        run: |
          # Si la branche release existe déjà, on la supprime localement
          git branch -D release || true
          # On crée la branche release à partir de HEAD
          git checkout --orphan release

          # On supprime tout (sinon on garde les fichiers de l'app)
          git reset --hard

      # 6️⃣ Copier le contenu de dist dans la racine du nouveau commit
      - name: Copy dist to root
        run: |
          # Ici, ui-components est le nom de ta lib ; adapte si besoin
          cp -r dist/ui-components/* ./
          # On peut enlever le dossier dist/ si tu ne le veux pas :
          rm -rf dist

      # 7️⃣ Commit & push sur release
      - name: Commit & push release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git add -A
          git commit -m "Release ${{ github.ref_name }}" --author="github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          # On pousse en force la branche release
          git push -f origin release

